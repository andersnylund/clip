generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = "***"
}

model Account {
  id                 String    @default(uuid()) @id
  compoundId         String    @unique @map(name: "compound_id")
  userId             String    @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")

  @@map(name: "accounts")
}

model Session {
  id           String   @default(uuid()) @id
  userId       String   @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

model User {
  id            String     @default(uuid()) @id
  name          String?
  email         String?    @unique
  emailVerified DateTime?  @map(name: "email_verified")
  image         String?
  createdAt     DateTime   @default(now()) @map(name: "created_at")
  updatedAt     DateTime   @default(now()) @map(name: "updated_at")
  Folder        Folder[]
  Bookmark      Bookmark[]

  @@map(name: "users")
}

model VerificationRequest {
  id         String   @default(uuid()) @id
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now()) @map(name: "created_at")
  updatedAt  DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "verification_requests")
}

model Folder {
  id       String     @default(uuid()) @id
  name     String
  Bookmark Bookmark[]
  userId   String
  user     User       @relation(fields: [userId], references: [id])
}

model Bookmark {
  id       String  @default(uuid()) @id
  name     String
  url      String
  userId   String
  user     User    @relation(fields: [userId], references: [id])
  folderId String?
  folder   Folder? @relation(fields: [folderId], references: [id])
}
